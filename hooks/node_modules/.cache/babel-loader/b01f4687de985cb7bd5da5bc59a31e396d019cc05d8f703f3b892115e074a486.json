{"ast":null,"code":"var _jsxFileName = \"/home/angelornellab/workspace/reactjs-course/hooks/src/App.js\";\nimport { Component, useState } from 'react';\n\n// Restrictions:\n\n// - Not called in loops or conditionals\n// - Hooks can only be called in 2 parts (react components and custom hooks)\n// - When you create a custom hook always use the 'use' prefix\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: 0\n    };\n    this.setItems = () => {\n      this.setState({\n        items: this.state.items + 1\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Items: \", this.state.items, \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.setItems,\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n// const App = () => {\n//     const [items, setItems] = useState(0);\n\n//     return (\n//         <div>\n//             Items: {items}\n//             &nbsp;\n//             <button\n//                 onClick={() => setItem(items + 1)}\n//             >\n//                 Add Item\n//             </button>\n//         </div>\n//     );\n// };\n\nexport default App;","map":{"version":3,"names":["Component","useState","jsxDEV","_jsxDEV","App","constructor","args","state","items","setItems","setState","render","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/angelornellab/workspace/reactjs-course/hooks/src/App.js"],"sourcesContent":["import {Component, useState} from 'react';\r\n\r\n// Restrictions:\r\n\r\n// - Not called in loops or conditionals\r\n// - Hooks can only be called in 2 parts (react components and custom hooks)\r\n// - When you create a custom hook always use the 'use' prefix\r\n\r\nclass App extends Component {\r\n    state = {\r\n        items: 0,\r\n    };\r\n\r\n    setItems = () => {\r\n        this.setState({items: this.state.items + 1});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Items: {this.state.items}\r\n                &nbsp;\r\n                <button\r\n                    onClick={() => this.setItems}\r\n                >\r\n                    Add Item\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// const App = () => {\r\n//     const [items, setItems] = useState(0);\r\n\r\n//     return (\r\n//         <div>\r\n//             Items: {items}\r\n//             &nbsp;\r\n//             <button\r\n//                 onClick={() => setItem(items + 1)}\r\n//             >\r\n//                 Add Item\r\n//             </button>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;;AAEzC;;AAEA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,GAAG,SAASJ,SAAS,CAAC;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACxBC,KAAK,GAAG;MACJC,KAAK,EAAE;IACX,CAAC;IAAA,KAEDC,QAAQ,GAAG,MAAM;MACb,IAAI,CAACC,QAAQ,CAAC;QAACF,KAAK,EAAE,IAAI,CAACD,KAAK,CAACC,KAAK,GAAG;MAAC,CAAC,CAAC;IAChD,CAAC;EAAA;EAEDG,MAAMA,CAAA,EAAG;IACL,oBACIR,OAAA;MAAAS,QAAA,GAAK,SACM,EAAC,IAAI,CAACL,KAAK,CAACC,KAAK,EAAC,MAEzB,eAAAL,OAAA;QACIU,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACJ,QAAS;QAAAG,QAAA,EAChC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEd;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}