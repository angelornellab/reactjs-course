{"ast":null,"code":"var _jsxFileName = \"/home/angelornellab/workspace/reactjs-course/context/src/App.js\";\nimport { Component, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context1 = /*#__PURE__*/createContext('first context');\nconst Context2 = /*#__PURE__*/createContext('second context');\nconst Provider = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(Context1.Provider, {\n    value: \"value 1\",\n    children: [/*#__PURE__*/_jsxDEV(Context1.Provider, {\n      value: \"value 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = Provider;\nvar _c;\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"names":["Component","createContext","jsxDEV","_jsxDEV","Context1","Context2","Provider","children","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/angelornellab/workspace/reactjs-course/context/src/App.js"],"sourcesContent":["import {Component, createContext} from 'react';\r\n\r\nconst Context1 = createContext('first context');\r\nconst Context2 = createContext('second context');\r\nconst Provider = ({children}) => {\r\n    return (\r\n        <Context1.Provider value='value 1'>\r\n            <Context1.Provider value='value 1'></Context1.Provider>\r\n            {children}\r\n        </Context1.Provider>\r\n    );\r\n};"],"mappings":";AAAA,SAAQA,SAAS,EAAEC,aAAa,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,gBAAGH,aAAa,CAAC,eAAe,CAAC;AAC/C,MAAMI,QAAQ,gBAAGJ,aAAa,CAAC,gBAAgB,CAAC;AAChD,MAAMK,QAAQ,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAC7B,oBACIJ,OAAA,CAACC,QAAQ,CAACE,QAAQ;IAACE,KAAK,EAAC,SAAS;IAAAD,QAAA,gBAC9BJ,OAAA,CAACC,QAAQ,CAACE,QAAQ;MAACE,KAAK,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoB,CAAC,EACtDL,QAAQ;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAE5B,CAAC;AAACC,EAAA,GAPIP,QAAQ;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}