{"ast":null,"code":"import { combineReducers } from \"redux\";\nexport const setPending = () => {\n  return {\n    type: 'todos/pending'\n  };\n};\nexport const setFulfilled = payload => ({\n  type: 'todos/fulfilled',\n  payload\n});\nexport const setError = e => ({\n  type: 'todos/error',\n  error: e.message\n});\nexport const setComplete = payload => ({\n  type: 'todo/complete',\n  payload\n});\nexport const setFilter = payload => ({\n  type: 'filter/set',\n  payload\n});\nexport const fetchThunk = () => async dispatch => {\n  dispatch(setPending());\n  try {\n    const response = await fetch('https://jsonplaceholder.typicode.com/todos');\n    const data = await response.json();\n    const todos = data.slice(0, 10);\n    dispatch(setFulfilled(todos));\n  } catch (e) {\n    dispatch(setError());\n  }\n};\nexport const todosReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'todos/fulfilled':\n      return action.payload;\n    case 'todo/add':\n      return state.concat({\n        ...action.payload\n      });\n    case 'todo/complete':\n      const newTodos = state.map(todo => {\n        if (todo.id === action.payload.id) {\n          return {\n            ...todo,\n            completed: !todo.comlpleted\n          };\n        }\n        return todo;\n      });\n      return newTodos;\n    default:\n      return state;\n  }\n};\nexport const filterReducer = (state = 'all', action) => {\n  switch (action.type) {\n    case 'filter/set':\n      return action.payload;\n    default:\n      return state;\n  }\n};\nconst initialFetching = {\n  loading: ''\n};\nexport const fetchingReducer = (state = initialFetching, action) => {\n  switch (action.type) {\n    case 'todos/pending':\n      return {\n        ...state,\n        loading: 'pending'\n      };\n    case 'todos/fulfilled':\n      return {\n        ...state,\n        loading: 'succeded'\n      };\n    case 'todos/error':\n      return {\n        error: action.error,\n        loading: 'rejected'\n      };\n    default:\n      return state;\n  }\n  ;\n};\nexport const reducer = combineReducers({\n  todos: combineReducers({\n    entities: todosReducer,\n    status: fetchingReducer\n  }),\n  filter: filterReducer\n});","map":{"version":3,"names":["combineReducers","setPending","type","setFulfilled","payload","setError","e","error","message","setComplete","setFilter","fetchThunk","dispatch","response","fetch","data","json","todos","slice","todosReducer","state","action","concat","newTodos","map","todo","id","completed","comlpleted","filterReducer","initialFetching","loading","fetchingReducer","reducer","entities","status","filter"],"sources":["/home/angelornellab/workspace/reactjs-course/redux/src/features/todos.js"],"sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nexport const setPending = () => {\r\n    return {\r\n        type: 'todos/pending',\r\n    };\r\n};\r\n\r\nexport const setFulfilled = payload => ({type: 'todos/fulfilled', payload});\r\n\r\nexport const setError = e => ({type: 'todos/error', error: e.message});\r\n\r\nexport const setComplete = payload => ({type: 'todo/complete', payload});\r\n\r\nexport const setFilter = payload => ({type: 'filter/set', payload});\r\n\r\nexport const fetchThunk = () => async dispatch =>{\r\n    dispatch(setPending());\r\n    \r\n    try {\r\n        const response = await fetch('https://jsonplaceholder.typicode.com/todos');\r\n        const data = await response.json();\r\n        const todos = data.slice(0, 10);\r\n\r\n        dispatch(setFulfilled(todos));\r\n\r\n    } catch (e) {\r\n        dispatch(setError());\r\n    }\r\n};\r\n\r\nexport const todosReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'todos/fulfilled':\r\n            return action.payload;\r\n        case 'todo/add': \r\n            return state.concat({...action.payload});\r\n        case 'todo/complete': \r\n            const newTodos = state.map(todo => {\r\n                if (todo.id === action.payload.id) {\r\n                    return {...todo, completed: !todo.comlpleted}\r\n                }\r\n\r\n                return todo;\r\n            });\r\n\r\n           return newTodos;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const filterReducer = (state = 'all', action) => {\r\n    switch(action.type) {\r\n        case 'filter/set':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst initialFetching = {\r\n    loading: '',\r\n};\r\nexport const fetchingReducer = (state = initialFetching, action) => {\r\n    switch(action.type) {\r\n        case 'todos/pending':\r\n            return {\r\n                ...state,\r\n                loading: 'pending',\r\n            }\r\n        case 'todos/fulfilled':\r\n            return {\r\n                ...state,\r\n                loading: 'succeded',\r\n            }\r\n        case 'todos/error':\r\n            return {\r\n                error: action.error,\r\n                loading: 'rejected',\r\n            }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const reducer = combineReducers({\r\n    todos: combineReducers({\r\n        entities: todosReducer,\r\n        status: fetchingReducer,\r\n    }),\r\n    filter: filterReducer,\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}