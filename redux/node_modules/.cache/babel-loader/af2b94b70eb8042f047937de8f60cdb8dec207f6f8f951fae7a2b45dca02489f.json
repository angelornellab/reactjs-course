{"ast":null,"code":"var _jsxFileName = \"/home/angelornellab/workspace/reactjs-course/redux/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { combineReducers } from 'redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const asyncMiddleware = store => next => action => {\n  if (action) {}\n  console.log(store, next, action);\n  next(action);\n};\nexport const todosReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'todo/add':\n      return state.concat({\n        ...action.payload\n      });\n    case 'todo/complete':\n      const newTodos = state.map(todo => {\n        if (todo.id === action.payload.id) {\n          return {\n            ...todo,\n            completed: !todo.comlpleted\n          };\n        }\n        return todo;\n      });\n      return newTodos;\n    default:\n      return state;\n  }\n};\nexport const filterReducer = (state = 'all', action) => {\n  switch (action.type) {\n    case 'filter/set':\n      return action.payload;\n    default:\n      return state;\n  }\n};\nexport const reducer = combineReducers({\n  entities: todosReducer,\n  filter: filterReducer\n});\n\n// export const reducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case 'todo/add': \n//             return {\n//                 ...state,\n//                 entities: state.entities.concat({...action.payload}),\n//             }\n//         case 'todo/complete':\n//             const newTodos = state.entities.map(todo => {\n//                 if (todo.id === action.payload.id) {\n//                     return {...todo, completed: !todo.comlpleted}\n//                 }\n\n//                 return todo;\n//             });\n\n//            return {\n//             ...state,\n//             entities: newTodos,\n//            };\n//         case 'filter/set': \n//            return {\n//             ...state,\n//             filter: action.payload,\n//            };\n//       }\n\n//     return state;\n// };\n\nconst selectTodos = state => {\n  const {\n    entities,\n    filter\n  } = state;\n  if (filter === 'complete') {\n    return entities.filter(todo => todo.completed);\n  }\n  if (filter === 'incomplete') {\n    return entities.filter(todo => !todo.completed);\n  }\n  return entities;\n};\nconst TodoItem = ({\n  todo\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: {\n      textDecoration: todo.completed ? 'line-through' : 'none'\n    },\n    onClick: () => dispatch({\n      type: 'todo/complete',\n      payload: todo\n    }),\n    children: todo.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoItem, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = TodoItem;\nconst App = () => {\n  _s2();\n  const [value, setValue] = useState('');\n  const dispatch = useDispatch();\n  const todos = useSelector(selectTodos);\n  const submit = e => {\n    e.preventDefault();\n    if (!value.trim()) {\n      return;\n    }\n    const id = Math.random().toString(36);\n    const todo = {\n      title: value,\n      comlpleted: false,\n      id\n    };\n    dispatch({\n      type: 'todo/add',\n      payload: todo\n    });\n    setValue('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: value,\n        onChange: e => setValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'filter/set',\n        payload: 'all'\n      }),\n      children: \"Mostrar todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'filter/set',\n        payload: 'complete'\n      }),\n      children: \"Completados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'filter/set',\n        payload: 'incomplete'\n      }),\n      children: \"Incompletos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n_s2(App, \"CgObblBA0uybxOIbc0R0T5/4Jfo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"TodoItem\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","useDispatch","useSelector","combineReducers","jsxDEV","_jsxDEV","asyncMiddleware","store","next","action","console","log","todosReducer","state","type","concat","payload","newTodos","map","todo","id","completed","comlpleted","filterReducer","reducer","entities","filter","selectTodos","TodoItem","_s","dispatch","style","textDecoration","onClick","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s2","value","setValue","todos","submit","e","preventDefault","trim","Math","random","toString","onSubmit","onChange","target","_c2","$RefreshReg$"],"sources":["/home/angelornellab/workspace/reactjs-course/redux/src/App.js"],"sourcesContent":["import {useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport const asyncMiddleware = store => next => action => {\r\n    if (action ) {\r\n\r\n    }\r\n    console.log(store, next, action);\r\n    next(action);\r\n};\r\n\r\nexport const todosReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'todo/add': \r\n            return state.concat({...action.payload});\r\n        case 'todo/complete': \r\n            const newTodos = state.map(todo => {\r\n                if (todo.id === action.payload.id) {\r\n                    return {...todo, completed: !todo.comlpleted}\r\n                }\r\n\r\n                return todo;\r\n            });\r\n\r\n           return newTodos;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const filterReducer = (state = 'all', action) => {\r\n    switch(action.type) {\r\n        case 'filter/set':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const reducer = combineReducers({\r\n    entities: todosReducer,\r\n    filter: filterReducer,\r\n});\r\n\r\n// export const reducer = (state = initialState, action) => {\r\n//     switch (action.type) {\r\n//         case 'todo/add': \r\n//             return {\r\n//                 ...state,\r\n//                 entities: state.entities.concat({...action.payload}),\r\n//             }\r\n//         case 'todo/complete':\r\n//             const newTodos = state.entities.map(todo => {\r\n//                 if (todo.id === action.payload.id) {\r\n//                     return {...todo, completed: !todo.comlpleted}\r\n//                 }\r\n\r\n//                 return todo;\r\n//             });\r\n\r\n//            return {\r\n//             ...state,\r\n//             entities: newTodos,\r\n//            };\r\n//         case 'filter/set': \r\n//            return {\r\n//             ...state,\r\n//             filter: action.payload,\r\n//            };\r\n//       }\r\n\r\n//     return state;\r\n// };\r\n\r\nconst selectTodos = state => {\r\n    const {entities, filter} = state;\r\n\r\n    if (filter === 'complete') {\r\n        return entities.filter(todo => todo.completed);\r\n    }\r\n\r\n    \r\n    if (filter === 'incomplete') {\r\n        return entities.filter(todo => !todo.completed);\r\n    }\r\n\r\n    return entities;\r\n}\r\n;\r\n\r\nconst TodoItem = ({todo}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <li \r\n            style={{textDecoration: todo.completed ? 'line-through': 'none'}}\r\n            onClick={() => dispatch({type: 'todo/complete', payload: todo})}\r\n        >\r\n            {todo.title}\r\n        </li>\r\n    );\r\n};\r\n\r\nconst App = () => {\r\n    const [value, setValue] = useState('');\r\n    const dispatch = useDispatch();\r\n    const todos = useSelector(selectTodos);\r\n\r\n    const submit = e => {\r\n        e.preventDefault();\r\n\r\n        if (!value.trim()) {\r\n            return;\r\n        }\r\n\r\n        const id = Math.random().toString(36);\r\n        const todo= {\r\n            title: value,\r\n            comlpleted: false,\r\n            id,\r\n        };\r\n\r\n        dispatch({type: 'todo/add', payload: todo});\r\n        setValue('');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <input value={value} onChange={e => setValue(e.target.value)}/>\r\n            </form>\r\n            <button onClick={() => dispatch({type: 'filter/set', payload: 'all'})}>Mostrar todos</button>\r\n            <button onClick={() => dispatch({type: 'filter/set', payload: 'complete'})}>Completados</button>\r\n            <button onClick={() => dispatch({type: 'filter/set', payload: 'incomplete'})}>Incompletos</button>\r\n            <ul>\r\n                {\r\n                    todos.map(\r\n                        todo => <TodoItem key={todo.id} todo={todo} />\r\n                    )\r\n                }\r\n            </ul>\r\n         \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}