{"ast":null,"code":"var _jsxFileName = \"/home/angelornellab/workspace/reactjs-course/compound-interest/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport Input from './components/Input';\nimport Button from './components/Button';\nimport Balance from './components/Balance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst compoundInterest = (deposit, contribution, years, rate) => {\n  let total = deposit;\n  for (let i = 0; i < years; i++) {\n    total = (total + contribution) * (rate + 1);\n  }\n  return Math.round(total);\n};\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2\n});\nfunction App() {\n  _s();\n  const [balance, setBalance] = useState('');\n  const handleSubmit = ({\n    deposit,\n    contribution,\n    years,\n    rate\n  }) => {\n    const value = compoundInterest(Number(deposit), Number(contribution), Number(years), Number(rate));\n    setBalance(formatter.format(value));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          deposit: '',\n          contribution: '',\n          years: '',\n          rate: ''\n        },\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            name: \"deposit\",\n            label: \"Initial Deposit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"contribution\",\n            label: \"Annual Contribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"years\",\n            label: \"Years\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"rate\",\n            label: \"Estimated interest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Calculate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), balance !== '' ? /*#__PURE__*/_jsxDEV(Balance, {\n        children: [\"Final Balance: \", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ghrIs0vxbSiHRL5lxzOeIDT5rno=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Formik","Form","Yup","Container","Section","Input","Button","Balance","jsxDEV","_jsxDEV","compoundInterest","deposit","contribution","years","rate","total","i","Math","round","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","App","_s","balance","setBalance","handleSubmit","value","Number","format","children","initialValues","onSubmit","name","label","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/home/angelornellab/workspace/reactjs-course/compound-interest/src/App.js"],"sourcesContent":["import {useState} from 'react';\nimport {Formik, Form} from 'formik';\nimport * as Yup from 'yup';\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport Input from './components/Input';\nimport Button from './components/Button';\nimport Balance from './components/Balance';\n\nconst compoundInterest = (deposit, contribution, years, rate) => {\n  let total = deposit;\n\n  for (let i = 0; i < years; i++) {\n    total = (total + contribution) * (rate + 1);\n  }\n\n  return Math.round(total);\n};\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nfunction App() {\n  const [balance, setBalance] = useState('');\n  const handleSubmit = ({deposit, contribution, years, rate,}) => {\n    const value = compoundInterest(Number(deposit), Number(contribution), Number(years), Number(rate));\n    setBalance(formatter.format(value));\n  };\n\n  return (\n    <Container>\n      <Section>\n        <Formik\n          initialValues={{deposit: '', contribution: '', years: '', rate: '',}}\n          onSubmit={handleSubmit}\n          \n        >\n          <Form>\n            <Input name='deposit' label='Initial Deposit' />\n            <Input name='contribution' label='Annual Contribution' />\n            <Input name='years' label='Years' />\n            <Input name='rate' label='Estimated interest' />\n            <Button type='submit'>Calculate</Button>\n          </Form>\n        </Formik>\n        {\n          balance !== '' ? \n          <Balance>Final Balance: {balance}</Balance> : \n          null\n        }\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAAQC,MAAM,EAAEC,IAAI,QAAO,QAAQ;AACnC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,gBAAgB,GAAGA,CAACC,OAAO,EAAEC,YAAY,EAAEC,KAAK,EAAEC,IAAI,KAAK;EAC/D,IAAIC,KAAK,GAAGJ,OAAO;EAEnB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,EAAEG,CAAC,EAAE,EAAE;IAC9BD,KAAK,GAAG,CAACA,KAAK,GAAGH,YAAY,KAAKE,IAAI,GAAG,CAAC,CAAC;EAC7C;EAEA,OAAOG,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC;AAC1B,CAAC;AACD,MAAMI,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EAC/CC,KAAK,EAAE,UAAU;EACjBC,QAAQ,EAAE,KAAK;EACfC,qBAAqB,EAAE,CAAC;EACxBC,qBAAqB,EAAE;AACzB,CAAC,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM+B,YAAY,GAAGA,CAAC;IAACnB,OAAO;IAAEC,YAAY;IAAEC,KAAK;IAAEC;EAAK,CAAC,KAAK;IAC9D,MAAMiB,KAAK,GAAGrB,gBAAgB,CAACsB,MAAM,CAACrB,OAAO,CAAC,EAAEqB,MAAM,CAACpB,YAAY,CAAC,EAAEoB,MAAM,CAACnB,KAAK,CAAC,EAAEmB,MAAM,CAAClB,IAAI,CAAC,CAAC;IAClGe,UAAU,CAACV,SAAS,CAACc,MAAM,CAACF,KAAK,CAAC,CAAC;EACrC,CAAC;EAED,oBACEtB,OAAA,CAACN,SAAS;IAAA+B,QAAA,eACRzB,OAAA,CAACL,OAAO;MAAA8B,QAAA,gBACNzB,OAAA,CAACT,MAAM;QACLmC,aAAa,EAAE;UAACxB,OAAO,EAAE,EAAE;UAAEC,YAAY,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,IAAI,EAAE;QAAG,CAAE;QACrEsB,QAAQ,EAAEN,YAAa;QAAAI,QAAA,eAGvBzB,OAAA,CAACR,IAAI;UAAAiC,QAAA,gBACHzB,OAAA,CAACJ,KAAK;YAACgC,IAAI,EAAC,SAAS;YAACC,KAAK,EAAC;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAChDjC,OAAA,CAACJ,KAAK;YAACgC,IAAI,EAAC,cAAc;YAACC,KAAK,EAAC;UAAqB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzDjC,OAAA,CAACJ,KAAK;YAACgC,IAAI,EAAC,OAAO;YAACC,KAAK,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpCjC,OAAA,CAACJ,KAAK;YAACgC,IAAI,EAAC,MAAM;YAACC,KAAK,EAAC;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAChDjC,OAAA,CAACH,MAAM;YAACqC,IAAI,EAAC,QAAQ;YAAAT,QAAA,EAAC;UAAS;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,EAEPd,OAAO,KAAK,EAAE,gBACdnB,OAAA,CAACF,OAAO;QAAA2B,QAAA,GAAC,iBAAe,EAACN,OAAO;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,GAC3C,IAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEhB;AAACf,EAAA,CA/BQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}